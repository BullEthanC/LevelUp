<!DOCTYPE html>
<head>
	<meta charset="UTF-8">
	<title> Memory Game</title>
	<link rel="stylesheet" href="stylesMemory.css">
	<style>
		.rev {
			display: inline-block;
  			border-radius: 4px;
  			background-color: grey;
  			border: none;
  			color: #FFFFFF;
  			text-align: center;
  			font-size: 28px;
  			padding: 20px;
  			width: 200px;
  			transition: all 0.5s;
  			cursor: pointer;
 	 		margin: 5px;
		}

		.rev span {
  			cursor: pointer;
  			display: inline-block;
  			position: relative;
  			transition: 0.5s;
		}

		.rev span:after {
  			content: '\00ab';
  			position: absolute;
  			opacity: 0;
  			top: 0;
  			left: -20px;
  			transition: 0.5s;
		}

		.rev:hover span {
  			padding-left: 25px;
		}

		.rev:hover span:after {
  			opacity: 1;
  			left: 0;
		}
	</style>
</head>
<body>

	<section class="memory-game">
		<div class="memory-card" data-framework="seal">
			<img class="front" src="Seal.png" alt="Seal"/>
			<img class="back" src="jaguar.png" alt="Memory Card"/>
		</div>
		
		<div class="memory-card" data-framework="seal">
			<img class="front" src="Seal.png" alt="Seal"/>
			<img class="back" src="jaguar.png" alt="Memory Card"/>
		</div>

		<div class="memory-card" data-framework="atom">
			<img class="front" src="atom.svg" alt="Atom"/>
			<img class="back" src="jaguar.png" alt="Memory Card"/>
		</div>

		<div class="memory-card" data-framework="atom">
			<img class="front" src="atom.svg" alt="Atom"/>
			<img class="back" src="jaguar.png" alt="Memory Card"/>
		</div>

		<div class="memory-card" data-framework="purple">
			<img class="front" src="purple.svg" alt="Purple"/>
			<img class="back" src="jaguar.png" alt="Memory Card"/>
		</div>

		<div class="memory-card" data-framework="purple">
			<img class="front" src="purple.svg" alt="Purple"/>
			<img class="back" src="jaguar.png" alt="Memory Card"/>
		</div>

		<div class="memory-card" data-framework="canvas">
			<img class="front" src="canvas.png" alt="Canvas"/>
			<img class="back" src="jaguar.png" alt="Memory Card"/>
		</div>

		<div class="memory-card" data-framework="canvas">
			<img class="front" src="canvas.png" alt="Canvas"/>
			<img class="back" src="jaguar.png" alt="Memory Card"/>
		</div>

		<div class="memory-card" data-framework="shape">
			<img class="front" src="shape.svg" alt="Shape"/>
			<img class="back" src="jaguar.png" alt="Memory Card"/>
		</div>

		<div class="memory-card" data-framework="shape">
			<img class="front" src="shape.svg" alt="Shape"/>
			<img class="back" src="jaguar.png" alt="Memory Card"/>
		</div>

		<div class="memory-card" data-framework="v">
			<img class="front" src="v.svg" alt="V"/>
			<img class="back" src="jaguar.png" alt="Memory Card"/>
		</div>

		<div class="memory-card" data-framework="v">
			<img class="front" src="v.svg" alt="V"/>
			<img class="back" src="jaguar.png" alt="Memory Card"/>
		</div>
	</section>

<script>

	const cards = document.querySelectorAll('.memory-card');

	let hasFlippedCard = false;
	let lockBoard = false;
	let firstCard, secondCard;

	function flipCard() {
  		if (lockBoard) return;
		if(this === firstCard) return;

  		this.classList.add('flip');

  		if (!hasFlippedCard) {
    			// first click
    			hasFlippedCard = true;
    			firstCard = this;

    		return;
  	}

  		// second click
  		
  		secondCard = this;

  	checkForMatch();
	}

	function checkForMatch() {
  		let isMatch = firstCard.dataset.framework === secondCard.dataset.framework;

  		isMatch ? disableCards() : unflipCards();
	}

	function disableCards() {
  		firstCard.removeEventListener('click', flipCard);
  		secondCard.removeEventListener('click', flipCard);
		resetBoard();
	}

	function unflipCards() {
  		lockBoard = true;

  	setTimeout(() => {
   		firstCard.classList.remove('flip');
    		secondCard.classList.remove('flip');

    		resetBoard();
  }, 1500);
}

	function resetBoard() {
		[hasFlippedCard, lockBoard] = [false,false];
		[firstCard, secondCard] = [null, null];
	}

	(function shuffle() {
		cards.forEach(card => {
			let randomPos = Math.floor(Math.random() * 12);
			card.style.order= randomPos;
		});
	})();

cards.forEach(card => card.addEventListener('click', flipCard));
</script>
<a href="MiniGames.htm"><button class="rev" style="position:absolute; left:0; bottom:0;"><span>Go Back</span></button></a>
</body>
</html>
