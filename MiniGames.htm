<!DOCTYPE html>
<html>
  <head>
    <title>MiniGames</title>
    <link rel="stylesheet" href="styles.css">
    <style>
      canvas {
        position: absolute;
        border:2px solid grey;
        background-color: lightgrey;
        top: 10%;
      }
    </style>
  </head>
  <body onload="startGame(); login();">
    <ul>
      <font size="+2">
      <li><a href="index.htm">Home</a></li>
      <li><a class="active" href="MiniGames.htm">MiniGames</a></li>
      <li><a href="Stats.htm">Stats</a></li>
      <li><a href="Store.htm">Store</a></li>
      </font>
    </ul>
    <svg height="100" width="100">
      <circle id="myCircle" style="stroke-dashoffset: 250;" cx="50" cy="28" r="20" />
    </svg>
    <h2 id="myLevel" style="position:absolute; top: -5px; right: 44px;">0</h2>

    <!--MiniGames-->
    <script>
    var myGamePiece;
    var myObstacles = [];
    var myScore;

    function startGame() {
      console.log("Game Started");
      myGamePiece = new component(30, 30, "red", 10, 120);
      myGamePiece.gravity = 0.05;
      myScore = new component("30px", "Consolas", "black", 280, 40, "text");
      myGameArea.start();
    }

    var myGameArea = {
      canvas : document.createElement("canvas"),
      start : function() {
        this.canvas.width = 1420;
        this.canvas.height = 675;
        this.context = this.canvas.getContext("2d");
        document.body.insertBefore(this.canvas, document.body.childNodes[0]);	
        this.frameNo = 0;
        this.interval = setInterval(updateGameArea, 20);
        window.addEventListener('keydown', function (e) {
          myGameArea.key = e.keyCode;
        })
        window.addEventListener('keyup', function (e) {
          myGameArea.key = false;
        })
      },
      clear : function() {
        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
      }
    }

    function component(width, height, color, x, y, type) {
      this.type = type;
      this.score = 0;
      this.width = width;
      this.height = height;
      this.speedX = 0;
      this.speedY = 0;    
      this.x = x;
      this.y = y;
      this.gravity = 0;
      this.gravitySpeed = 0;
      this.update = function() {
        ctx = myGameArea.context;
        if (this.type == "text") {
          ctx.font = this.width + " " + this.height;
          ctx.fillStyle = color;
          ctx.fillText(this.text, this.x, this.y);
        } else {
          ctx.fillStyle = color;
          ctx.fillRect(this.x, this.y, this.width, this.height);
        }
      }
      this.newPos = function() {
        this.gravitySpeed += this.gravity;
        this.x += this.speedX;
        this.y += this.speedY + this.gravitySpeed;
        this.hitBottom();
      }
      this.hitBottom = function() {
        var rockbottom = myGameArea.canvas.height - this.height;
        if (this.y > rockbottom) {
          this.y = rockbottom;
          this.gravitySpeed = 0;
        }
      }
      this.crashWith = function(otherobj) {
        var myleft = this.x;
        var myright = this.x + (this.width);
        var mytop = this.y;
        var mybottom = this.y + (this.height);
        var otherleft = otherobj.x;
        var otherright = otherobj.x + (otherobj.width);
        var othertop = otherobj.y;
        var otherbottom = otherobj.y + (otherobj.height);
        var crash = true;
        if ((mybottom < othertop) || (mytop > otherbottom) || (myright < otherleft) || (myleft > otherright)) {
          crash = false;
        }
        return crash;
      }
    }

    function updateGameArea() {
      var x, height, gap, minHeight, maxHeight, minGap, maxGap;
      for (i = 0; i < myObstacles.length; i += 1) {
        if (myGamePiece.crashWith(myObstacles[i])) {
            return;
        } 
      }
      myGameArea.clear();
      myGameArea.frameNo += 1;
      if (myGameArea.frameNo == 1 || everyinterval(150)) {
        x = myGameArea.canvas.width;
        minHeight = 20;
        maxHeight = 200;
        height = Math.floor(Math.random()*(maxHeight-minHeight+1)+minHeight);
        minGap = 50;
        maxGap = 200;
        gap = Math.floor(Math.random()*(maxGap-minGap+1)+minGap);
        myObstacles.push(new component(10, height, "green", x, 0));
        myObstacles.push(new component(10, x - height - gap, "green", x, height + gap));
      }
      for (i = 0; i < myObstacles.length; i += 1) {
        myObstacles[i].x += -1;
        myObstacles[i].update();
      }
      myScore.text="SCORE: " + myGameArea.frameNo;
      if (myGameArea.key && myGameArea.key == 32) {accelerate(-.2); }
      else {myGamePiece.gravity=.05;}
      myScore.update();
      myGamePiece.newPos();
      myGamePiece.update();
    }

    function everyinterval(n) {
      if ((myGameArea.frameNo / n) % 1 == 0) {return true;}
        return false;
    }

    function accelerate(n) {
      myGamePiece.gravity = n;
    }
  </script>
  </body>

  <!--Initializes Firebase-->
  <script src="https://www.gstatic.com/firebasejs/5.4.1/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/5.4.1/firebase-database.js"></script>
  <script src="https://www.gstatic.com/firebasejs/5.4.1/firebase-auth.js"></script>
  <script>
    var config = {
      apiKey: "AIzaSyATXUtGqVWqFHf9JrYbBch3mk_C9BfLweU",
      authDomain: "levelup-da720.firebaseapp.com",
      databaseURL: "https://levelup-da720.firebaseio.com",
      projectId: "levelup-da720",
      storageBucket: "levelup-da720.appspot.com",
      messagingSenderId: "205165976389"
    };
    firebase.initializeApp(config);

  <!--Authentication-->
    var provider = new firebase.auth.GoogleAuthProvider();
  
    function login() {
      firebase.auth().signInWithPopup(provider).then(function(result) {
        var token = result.credential.accessToken;
        var user = result.user;
      }).catch(function(error) {
        var errorCode = error.code;
        var errorMessage = error.message;
        var email = error.email;
        var credential = error.credential;
      });
    }

  <!--Sends Information to Firebase-->
    var database = firebase.database();
    function addStudent(firstname, lastname) {
      if (firstname!="" && lastname!="") {
        firebase.database().ref('users/' + lastname + ', ' + firstname).set({
	  Name: lastname+', '+firstname
        });
      }
    }
  <!--Retrieves Info About User-->
  var studentRef = firebase.database().ref('users');
  studentRef.once("value", function(snapshot) {
    if (snapshot.exists()) {
      var content = 0;
      var level = 0;
      snapshot.forEach(function(data){
        var childKey = '"'+data.key+'"';
        var val = data.val();
        content=val.XP%125;
        level=Math.floor(val.XP/125);
      });
      content+=375;
      console.log(content);
      changeCircle(content);
      changeLevel(level);
    }
  });
  </script>
  <script>
    function changeCircle(num) {
      document.getElementById("myCircle").style = 'stroke-dashoffset: '+num+';'
    }
    function changeLevel(num) {
      document.getElementById("myLevel").innerHTML = num;
    }
  </script>
</html>